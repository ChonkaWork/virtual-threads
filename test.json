{
  "threadDump": {
    "processId": "31343",
    "time": "2024-07-03T08:46:34.339848Z",
    "runtimeVersion": "21.0.3+9-LTS",
    "threadContainers": [
      {
        "container": "<root>",
        "parent": null,
        "owner": null,
        "threads": [
         {
           "tid": "1",
           "name": "main",
           "stack": [
              "java.base\/java.lang.Thread.sleep0(Native Method)",
              "java.base\/java.lang.Thread.sleep(Thread.java:509)",
              "com.example.webapp.playground.DemoBasics.main(DemoBasics.java:21)"
           ]
         },
         {
           "tid": "9",
           "name": "Reference Handler",
           "stack": [
              "java.base\/java.lang.ref.Reference.waitForReferencePendingList(Native Method)",
              "java.base\/java.lang.ref.Reference.processPendingReferences(Reference.java:246)",
              "java.base\/java.lang.ref.Reference$ReferenceHandler.run(Reference.java:208)"
           ]
         },
         {
           "tid": "10",
           "name": "Finalizer",
           "stack": [
              "java.base\/java.lang.Object.wait0(Native Method)",
              "java.base\/java.lang.Object.wait(Object.java:366)",
              "java.base\/java.lang.Object.wait(Object.java:339)",
              "java.base\/java.lang.ref.NativeReferenceQueue.await(NativeReferenceQueue.java:48)",
              "java.base\/java.lang.ref.ReferenceQueue.remove0(ReferenceQueue.java:158)",
              "java.base\/java.lang.ref.NativeReferenceQueue.remove(NativeReferenceQueue.java:89)",
              "java.base\/java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:173)"
           ]
         },
         {
           "tid": "11",
           "name": "Signal Dispatcher",
           "stack": [
           ]
         },
         {
           "tid": "18",
           "name": "Common-Cleaner",
           "stack": [
              "java.base\/jdk.internal.misc.Unsafe.park(Native Method)",
              "java.base\/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)",
              "java.base\/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1847)",
              "java.base\/java.lang.ref.ReferenceQueue.await(ReferenceQueue.java:71)",
              "java.base\/java.lang.ref.ReferenceQueue.remove0(ReferenceQueue.java:143)",
              "java.base\/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:218)",
              "java.base\/jdk.internal.ref.CleanerImpl.run(CleanerImpl.java:140)",
              "java.base\/java.lang.Thread.run(Thread.java:1583)",
              "java.base\/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:186)"
           ]
         },
         {
           "tid": "19",
           "name": "Monitor Ctrl-Break",
           "stack": [
              "java.base\/sun.nio.ch.SocketDispatcher.read0(Native Method)",
              "java.base\/sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:47)",
              "java.base\/sun.nio.ch.NioSocketImpl.tryRead(NioSocketImpl.java:256)",
              "java.base\/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:307)",
              "java.base\/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346)",
              "java.base\/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796)",
              "java.base\/java.net.Socket$SocketInputStream.read(Socket.java:1099)",
              "java.base\/sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:350)",
              "java.base\/sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:393)",
              "java.base\/sun.nio.cs.StreamDecoder.lockedRead(StreamDecoder.java:217)",
              "java.base\/sun.nio.cs.StreamDecoder.read(StreamDecoder.java:171)",
              "java.base\/java.io.InputStreamReader.read(InputStreamReader.java:188)",
              "java.base\/java.io.BufferedReader.fill(BufferedReader.java:160)",
              "java.base\/java.io.BufferedReader.implReadLine(BufferedReader.java:370)",
              "java.base\/java.io.BufferedReader.readLine(BufferedReader.java:347)",
              "java.base\/java.io.BufferedReader.readLine(BufferedReader.java:436)",
              "com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:54)"
           ]
         },
         {
           "tid": "20",
           "name": "Notification Thread",
           "stack": [
           ]
         },
         {
           "tid": "33",
           "name": "Attach Listener",
           "stack": [
           ]
         },
         {
           "tid": "35",
           "name": "RMI TCP Accept-0",
           "stack": [
              "java.base\/sun.nio.ch.Net.accept(Native Method)",
              "java.base\/sun.nio.ch.NioSocketImpl.accept(NioSocketImpl.java:748)",
              "java.base\/java.net.ServerSocket.implAccept(ServerSocket.java:698)",
              "java.base\/java.net.ServerSocket.platformImplAccept(ServerSocket.java:663)",
              "java.base\/java.net.ServerSocket.implAccept(ServerSocket.java:639)",
              "java.base\/java.net.ServerSocket.implAccept(ServerSocket.java:585)",
              "java.base\/java.net.ServerSocket.accept(ServerSocket.java:543)",
              "jdk.management.agent\/sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:52)",
              "java.rmi\/sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:424)",
              "java.rmi\/sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:388)",
              "java.base\/java.lang.Thread.run(Thread.java:1583)"
           ]
         },
         {
           "tid": "38",
           "name": "JMX server connection timeout 38",
           "stack": [
              "java.base\/java.lang.Object.wait0(Native Method)",
              "java.base\/java.lang.Object.wait(Object.java:366)",
              "java.management\/com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run(ServerCommunicatorAdmin.java:171)",
              "java.base\/java.lang.Thread.run(Thread.java:1583)"
           ]
         }
        ],
        "threadCount": "10"
      },
      {
        "container": "java.util.concurrent.ScheduledThreadPoolExecutor@402374e2",
        "parent": "<root>",
        "owner": null,
        "threads": [
         {
           "tid": "37",
           "name": "RMI Scheduler(0)",
           "stack": [
              "java.base\/jdk.internal.misc.Unsafe.park(Native Method)",
              "java.base\/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)",
              "java.base\/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)",
              "java.base\/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)",
              "java.base\/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)",
              "java.base\/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)",
              "java.base\/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)",
              "java.base\/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)",
              "java.base\/java.lang.Thread.run(Thread.java:1583)"
           ]
         }
        ],
        "threadCount": "1"
      },
      {
        "container": "java.util.concurrent.ThreadPoolExecutor@7a639d7b",
        "parent": "<root>",
        "owner": null,
        "threads": [
        ],
        "threadCount": "0"
      },
      {
        "container": "java.util.concurrent.ScheduledThreadPoolExecutor@7eda2dbb",
        "parent": "<root>",
        "owner": null,
        "threads": [
        ],
        "threadCount": "0"
      },
      {
        "container": "ForkJoinPool-1\/jdk.internal.vm.SharedThreadContainer@bb0197b",
        "parent": "<root>",
        "owner": null,
        "threads": [
        ],
        "threadCount": "0"
      },
      {
        "container": "ForkJoinPool.commonPool\/jdk.internal.vm.SharedThreadContainer@2738b14c",
        "parent": "<root>",
        "owner": null,
        "threads": [
        ],
        "threadCount": "0"
      },
      {
        "container": "java.util.concurrent.ThreadPoolExecutor@bcc59bc",
        "parent": "<root>",
        "owner": null,
        "threads": [
         {
           "tid": "36",
           "name": "RMI TCP Connection(1)-10.9.130.29",
           "stack": [
              "java.base\/java.lang.Thread.getStackTrace(Thread.java:2450)",
              "java.base\/jdk.internal.vm.ThreadDumper.dumpThreadToJson(ThreadDumper.java:270)",
              "java.base\/jdk.internal.vm.ThreadDumper.dumpThreadsToJson(ThreadDumper.java:242)",
              "java.base\/jdk.internal.vm.ThreadDumper.dumpThreadsToJson(ThreadDumper.java:206)",
              "java.base\/jdk.internal.vm.ThreadDumper.dumpThreadsToFile(ThreadDumper.java:117)",
              "java.base\/jdk.internal.vm.ThreadDumper.dumpThreadsToJson(ThreadDumper.java:85)",
              "jdk.management\/com.sun.management.internal.DiagnosticCommandImpl.executeDiagnosticCommand(Native Method)",
              "jdk.management\/com.sun.management.internal.DiagnosticCommandImpl$Wrapper.execute(DiagnosticCommandImpl.java:171)",
              "jdk.management\/com.sun.management.internal.DiagnosticCommandImpl.invoke(DiagnosticCommandImpl.java:262)",
              "java.management\/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:803)",
              "java.management\/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)",
              "java.management.rmi\/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)",
              "java.management.rmi\/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)",
              "java.management.rmi\/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)",
              "java.management.rmi\/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)",
              "java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)",
              "java.base\/java.lang.reflect.Method.invoke(Method.java:580)",
              "java.rmi\/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)",
              "java.rmi\/sun.rmi.transport.Transport$1.run(Transport.java:200)",
              "java.rmi\/sun.rmi.transport.Transport$1.run(Transport.java:197)",
              "java.base\/java.security.AccessController.doPrivileged(AccessController.java:714)",
              "java.rmi\/sun.rmi.transport.Transport.serviceCall(Transport.java:196)",
              "java.rmi\/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)",
              "java.rmi\/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)",
              "java.rmi\/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)",
              "java.base\/java.security.AccessController.doPrivileged(AccessController.java:400)",
              "java.rmi\/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)",
              "java.base\/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)",
              "java.base\/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)",
              "java.base\/java.lang.Thread.run(Thread.java:1583)"
           ]
         },
         {
           "tid": "45",
           "name": "RMI TCP Connection(2)-10.9.130.29",
           "stack": [
              "java.base\/java.lang.Object.wait0(Native Method)",
              "java.base\/java.lang.Object.wait(Object.java:366)",
              "java.management\/com.sun.jmx.remote.internal.ArrayNotificationBuffer.fetchNotifications(ArrayNotificationBuffer.java:448)",
              "java.management\/com.sun.jmx.remote.internal.ArrayNotificationBuffer$ShareBuffer.fetchNotifications(ArrayNotificationBuffer.java:227)",
              "java.management\/com.sun.jmx.remote.internal.ServerNotifForwarder.fetchNotifs(ServerNotifForwarder.java:273)",
              "java.management.rmi\/javax.management.remote.rmi.RMIConnectionImpl$4.run(RMIConnectionImpl.java:1271)",
              "java.management.rmi\/javax.management.remote.rmi.RMIConnectionImpl$4.run(RMIConnectionImpl.java:1269)",
              "java.management.rmi\/javax.management.remote.rmi.RMIConnectionImpl.fetchNotifications(RMIConnectionImpl.java:1275)",
              "java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)",
              "java.base\/java.lang.reflect.Method.invoke(Method.java:580)",
              "java.rmi\/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)",
              "java.rmi\/sun.rmi.transport.Transport$1.run(Transport.java:200)",
              "java.rmi\/sun.rmi.transport.Transport$1.run(Transport.java:197)",
              "java.base\/java.security.AccessController.doPrivileged(AccessController.java:714)",
              "java.rmi\/sun.rmi.transport.Transport.serviceCall(Transport.java:196)",
              "java.rmi\/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)",
              "java.rmi\/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)",
              "java.rmi\/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)",
              "java.base\/java.security.AccessController.doPrivileged(AccessController.java:400)",
              "java.rmi\/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)",
              "java.base\/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)",
              "java.base\/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)",
              "java.base\/java.lang.Thread.run(Thread.java:1583)"
           ]
         }
        ],
        "threadCount": "2"
      }
    ]
  }
}
